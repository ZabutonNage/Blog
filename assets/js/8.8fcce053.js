(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{317:function(t,e,s){"use strict";s.r(e);var a=s(14),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"one-tick-to-rule-them-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#one-tick-to-rule-them-all","aria-hidden":"true"}},[t._v("#")]),t._v(" One Tick To Rule Them All")]),t._v(" "),s("p",{staticStyle:{"font-style":"italic",color:"#bbb"}},[t._v("Originally posted in 2020-04")]),t._v(" "),s("p",[t._v("Single quotes or double quotes? Which do you prefer?")]),t._v(" "),s("h2",{attrs:{id:"two-choices"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#two-choices","aria-hidden":"true"}},[t._v("#")]),t._v(" Two choices")]),t._v(" "),s("p",[t._v("Both have their own benefits so whichever you choose, you miss out on the other's. Let me show you what I mean.")]),t._v(" "),s("p",[t._v("Double quotes are useful for human language.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" good "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Oh well, c'mon everybody and let's get together tonight.\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This is rather awkward with single quotes.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ugh "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Oh well, c\\'mon everybody and let\\'s get together tonight.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Single quotes on the other hand shine when you need to put HTML into a string.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<input id="name" placeholder="Name" />\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Imagine this with double quotes. Yikes!")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<input id=\\"name\\" placeholder=\\"Name\\" />"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Obviously the best thing to do is to not constrain yourself to one or the other but instead pick the right one for the right task. Which would be:")]),t._v(" "),s("ul",[s("li",[t._v("single quotes: HTML")]),t._v(" "),s("li",[t._v("double quotes: human language")])]),t._v(" "),s("p",[t._v("Now what do you do when these two come together?")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<textarea id=\"the-text\">Oh well, c\\'mon everybody and let\\'s get together tonight.</textarea>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<textarea id=\\"the-text\\">Oh well, c\'mon everybody and let\'s get together tonight.</textarea>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("You lose either way.")]),t._v(" "),s("h2",{attrs:{id:"es6-offers-an-alternative"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-offers-an-alternative","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6 offers an alternative")]),t._v(" "),s("p",[t._v("Since ES6 there is a "),s("strong",[t._v("third")]),t._v(" kind of quote. The backtick "),s("code",[t._v("`")]),t._v(". Its most common use, I would guess, is string interpolation. I'm sure you are already using it. It also has multi-line support.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`Hi!\nMy name is ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("lastName"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Remember that you aren't obliged to do string interpolation when using backticks. Neither are you required to have a multi-line string. So you could just....")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<textarea id=\"the-text\">Oh well, c'mon everybody and let's get together tonight.</textarea>`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Beautiful! No escaping necessary!")]),t._v(" "),s("p",[t._v("So do we use single quotes for HTML, double quotes for human language and backticks when we have both single and double quotes in the string from now? No! That is way too complicated! More rules means more complexity which leads to more arguments and lower productivity.")]),t._v(" "),s("p",[t._v("Make it simple. Make it good!")]),t._v(" "),s("p",[t._v("Fewer rules means fewer exceptions. Fewer exceptions means less complexity. Less complexity means more available brain capacity to tackle truly complex problems.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("The consequence")]),t._v(" "),s("p",[t._v("Use backticks everywhere!")])]),t._v(" "),s("h2",{attrs:{id:"watch-out"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch-out","aria-hidden":"true"}},[t._v("#")]),t._v(" Watch out")]),t._v(" "),s("p",[t._v("There are some restrictions, however. But your JavaScript parser will happily yell at you if you violate them.")]),t._v(" "),s("p",[t._v("For example, you can't use backticks in "),s("code",[t._v("import")]),t._v(" statements, although you can in "),s("code",[t._v("require")]),t._v(" because it is a regular function call.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Foo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`my-module`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// illegal")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`my-module`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// works just fine")]),t._v("\n")])])]),s("p",[t._v("You also can't use them directly for object keys, but it is possible when assigning them dynamically because, again, there it is basically just a regular argument to a function.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`nope`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`value is ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("okay"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" of course`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key is illegal, while value is ok")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`dynamic-")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`works like a charm`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// everything's fine here")]),t._v("\n")])])]),s("p",[t._v("Simply pick your favourite quote for these cases.")]),t._v(" "),s("h2",{attrs:{id:"the-benefits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-benefits","aria-hidden":"true"}},[t._v("#")]),t._v(" The benefits")]),t._v(" "),s("p",[t._v("I have been using "),s("em",[t._v('"backticks-everywhere"')]),t._v(" for a couple of years in production now. Teams I introduced them to picked them up quite quickly and there hasn't been a discussion about "),s("em",[t._v("single vs double")]),t._v(" ever since. To put the benefits into a list:")]),t._v(" "),s("ul",[s("li",[t._v("no arguments over "),s("em",[t._v("single vs double")])]),t._v(" "),s("li",[t._v("decision of which quote to pick is a no-brainer because there is no decision to be made")]),t._v(" "),s("li",[t._v("no escaping of other quotes necessary")]),t._v(" "),s("li",[t._v("string interpolation and multi-line support included")]),t._v(" "),s("li",[t._v("convenient location on keyboard (at least on mine where it is next to "),s("code",[t._v("P")]),t._v(")")])]),t._v(" "),s("p",[s("strong",[t._v("Go give it a try!")])]),t._v(" "),s("p",[t._v("And if you like, find me on Twitter to tell me about your experience.")])])},[],!1,null,null,null);e.default=n.exports}}]);